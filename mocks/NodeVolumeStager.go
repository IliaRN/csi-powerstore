// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	context "context"

	csi "github.com/container-storage-interface/spec/lib/go/csi"
	fs "github.com/dell/csi-powerstore/pkg/common/fs"

	logrus "github.com/sirupsen/logrus"

	mock "github.com/stretchr/testify/mock"
)

// NodeVolumeStager is an autogenerated mock type for the NodeVolumeStager type
type NodeVolumeStager struct {
	mock.Mock
}

// Stage provides a mock function with given fields: ctx, req, logFields, _a3, id
func (_m *NodeVolumeStager) Stage(ctx context.Context, req *csi.NodeStageVolumeRequest, logFields logrus.Fields, _a3 fs.Interface, id string) (*csi.NodeStageVolumeResponse, error) {
	ret := _m.Called(ctx, req, logFields, _a3, id)

	var r0 *csi.NodeStageVolumeResponse
	if rf, ok := ret.Get(0).(func(context.Context, *csi.NodeStageVolumeRequest, logrus.Fields, fs.Interface, string) *csi.NodeStageVolumeResponse); ok {
		r0 = rf(ctx, req, logFields, _a3, id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*csi.NodeStageVolumeResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *csi.NodeStageVolumeRequest, logrus.Fields, fs.Interface, string) error); ok {
		r1 = rf(ctx, req, logFields, _a3, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
